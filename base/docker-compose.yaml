version: '3.3'

volumes:
    public:
    sockets:

services:
  dockerapp1:
    build: ./src/dockerapp1
    env_file: dev.env
    restart: always
    volumes:
      - ./src/dockerapp1/:/opt/webapp/
      - public:/var/www/public/
      - sockets:/run/sockets/
    links:
      - db
    depends_on:
      - db
    command: bash -c "ls && python3 manage.py collectstatic --noinput && python3 manage.py migrate && gunicorn --chdir dockerapp1 -b unix:/run/sockets/dockerapp1.sock dockerapp1.wsgi --workers 3 --reload"

  db:
    image: postgres:12
    env_file: dev.env
    volumes:
      - ./volumes/database/:/var/lib/postgresql/data/
    ports:
      - ${POSTGRES_LISTEN_PORT}:5432

  nginx:
    build: ./services/nginx
    env_file: dev.env
    restart: always
    volumes:
      - ./volumes/nginx/conf.d/:/etc/nginx/conf.d/
      - ./volumes/certs:/etc/letsencrypt
      - ./volumes/certbot/www:/var/www/certbot
      - public:/var/www/public/
      - sockets:/run/sockets/
    ports:
      - ${NGINX_LISTEN_PORT}:8000
    links:
      - dockerapp1
    depends_on:
      - dockerapp1

  certbot:
    image: certbot/certbot
    env_file: dev.env
    volumes:
      - ./volumes/nginx/conf.d/:/etc/nginx/conf.d/
      - ./volumes/certs:/etc/letsencrypt
      - ./volumes/certbot/www:/var/www/certbot
